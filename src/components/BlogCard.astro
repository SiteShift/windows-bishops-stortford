---
interface Props {
  post: any;
}

const { post } = Astro.props;

// Extract slug from file path if not provided in frontmatter
const slug = post.frontmatter.slug || post.url?.split('/').pop()?.replace('.md', '') || 'untitled';

// Format date
const publishDate = new Date(post.frontmatter.publishDate);
const formattedDate = publishDate.toLocaleDateString('en-GB', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Calculate reading time (rough estimate)
const wordsPerMinute = 200;
// For markdown files, estimate word count from description or use default
const descriptionWords = post.frontmatter.description ? post.frontmatter.description.split(' ').length : 50;
const estimatedWordCount = descriptionWords * 15; // Rough multiplier for full article
const readingTime = Math.ceil(estimatedWordCount / wordsPerMinute);

// Get first tag for display
const primaryTag = post.frontmatter.tags?.[0];
---

<article class="card card-hover overflow-hidden group">
  <a href={`/blog/${slug}`} class="block">
    <!-- Hero Image -->
    <div class="relative overflow-hidden bg-gray-200 h-48 md:h-56">
      {post.frontmatter.heroImage ? (
        <img 
          src={post.frontmatter.heroImage}
          alt={post.frontmatter.title}
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
          loading="lazy"
          decoding="async"
        />
      ) : (
        <div class="w-full h-full bg-gradient-to-br from-green-100 to-green-200 flex items-center justify-center">
          <svg class="w-12 h-12 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
          </svg>
        </div>
      )}
      
      <!-- Category Tag -->
      {primaryTag && (
        <div class="absolute top-4 left-4">
          <span class="service-tag bg-white text-green-700 shadow-lg">
            {primaryTag.charAt(0).toUpperCase() + primaryTag.slice(1)}
          </span>
        </div>
      )}

      <!-- Reading Time -->
      <div class="absolute top-4 right-4">
        <div class="bg-black bg-opacity-60 text-white text-xs px-3 py-1 rounded-full">
          {readingTime} min read
        </div>
      </div>
    </div>

    <!-- Content -->
    <div class="p-6">
      <!-- Meta Information -->
      <div class="flex items-center text-sm text-gray-500 mb-3">
        <div class="flex items-center">
          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          <time datetime={post.frontmatter.publishDate}>{formattedDate}</time>
        </div>
        
        {post.frontmatter.author && (
          <>
            <span class="mx-2">â€¢</span>
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>{post.frontmatter.author}</span>
            </div>
          </>
        )}
      </div>

      <!-- Title -->
      <h3 class="text-xl font-bold text-green-800 mb-3 leading-tight tracking-tight group-hover:text-green-600 transition-colors">
        {post.frontmatter.title}
      </h3>

      <!-- Description -->
      <p class="text-gray-600 leading-relaxed mb-4 line-clamp-2">
        {post.frontmatter.description}
      </p>

      <!-- Tags -->
      {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-4">
          {post.frontmatter.tags.slice(0, 3).map((tag: string) => (
            <span class="text-xs bg-gray-100 text-gray-600 px-3 py-1 rounded-full">
              {tag.charAt(0).toUpperCase() + tag.slice(1)}
            </span>
          ))}
          {post.frontmatter.tags.length > 3 && (
            <span class="text-xs text-gray-400 px-2 py-1">
              +{post.frontmatter.tags.length - 3} more
            </span>
          )}
        </div>
      )}

      <!-- Read More Link -->
      <div class="flex items-center text-green-600 hover:text-green-700 font-semibold transition-colors group">
        <span>Read Full Article</span>
        <svg class="ml-2 w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </div>
    </div>
  </a>
</article> 