---
export interface Props {
  center: {
    lat: number;
    lng: number;
  };
  zoom: number;
  title: string;
  businesses?: any[];
}

const { center, zoom, title, businesses = [] } = Astro.props;
---

<div 
  id="google-map" 
  class="w-full h-96 rounded-lg shadow-md bg-gray-300 flex items-center justify-center"
  data-center={JSON.stringify(center)}
  data-zoom={zoom}
  data-title={title}
  data-businesses={JSON.stringify(businesses)}
>
  <div class="text-center">
    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2"></div>
    <p class="text-gray-600">Loading interactive map...</p>
  </div>
</div>

<script>
  // Google Maps initialization function
  function initMap() {
    const mapElement = document.getElementById('google-map');
    if (!mapElement) return;

    const center = JSON.parse(mapElement.dataset.center || '{"lat": 51.8721, "lng": 0.1604}');
    const zoom = parseInt(mapElement.dataset.zoom || '13');
    const title = mapElement.dataset.title || 'Windows Bishop\'s Stortford';
    const businesses = JSON.parse(mapElement.dataset.businesses || '[]');

    // Create map
    const map = new google.maps.Map(mapElement, {
      center: center,
      zoom: zoom,
      styles: [
        {
          featureType: "poi",
          elementType: "labels",
          stylers: [{ visibility: "off" }]
        }
      ]
    });

    // Add main business marker
    const mainMarker = new google.maps.Marker({
      position: center,
      map: map,
      title: title,
      icon: {
        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`
          <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
            <circle cx="20" cy="20" r="18" fill="#2563eb" stroke="#ffffff" stroke-width="3"/>
            <circle cx="20" cy="20" r="8" fill="#ffffff"/>
          </svg>
        `),
        scaledSize: new google.maps.Size(40, 40),
        anchor: new google.maps.Point(20, 20)
      }
    });

    // Add main info window
    const mainInfoWindow = new google.maps.InfoWindow({
      content: `
        <div class="p-2">
          <h3 class="font-bold text-blue-900">${title}</h3>
          <p class="text-sm text-gray-600">Serving Bishop's Stortford & surrounding areas</p>
          <p class="text-sm mt-2">
            <a href="tel:07476382827" class="text-blue-600 hover:text-blue-800">
              ðŸ“ž 07476 382827
            </a>
          </p>
        </div>
      `
    });

    mainMarker.addListener('click', () => {
      mainInfoWindow.open(map, mainMarker);
    });

    // Auto-open main info window after a delay
    setTimeout(() => {
      mainInfoWindow.open(map, mainMarker);
    }, 1000);

    // Add business markers using Google Places service
    if (businesses.length > 0) {
      const service = new google.maps.places.PlacesService(map);
      const geocoder = new google.maps.Geocoder();

      businesses.forEach((business, index) => {
        // Use place_id if available, otherwise geocode the address
        if (business.place_id) {
          service.getDetails({
            placeId: business.place_id,
            fields: ['geometry', 'name', 'formatted_address', 'rating', 'user_ratings_total']
          }, (place, status) => {
            if (status === google.maps.places.PlacesServiceStatus.OK && place.geometry) {
              createBusinessMarker(map, place, business);
            }
          });
        } else if (business.vicinity) {
          // Fallback to geocoding the address
          geocoder.geocode({
            address: business.vicinity + ', Bishop\'s Stortford, UK'
          }, (results, status) => {
            if (status === 'OK' && results[0]) {
              const location = results[0].geometry.location;
              createBusinessMarker(map, {
                geometry: { location: location },
                name: business.name,
                formatted_address: business.vicinity
              }, business);
            }
          });
        }
      });
    }
  }

  // Create business marker
  function createBusinessMarker(map, place, businessData) {
    const marker = new google.maps.Marker({
      position: place.geometry.location,
      map: map,
      title: place.name,
      icon: {
        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`
          <svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
            <circle cx="16" cy="16" r="14" fill="#16a34a" stroke="#ffffff" stroke-width="2"/>
            <circle cx="16" cy="16" r="6" fill="#ffffff"/>
          </svg>
        `),
        scaledSize: new google.maps.Size(32, 32),
        anchor: new google.maps.Point(16, 16)
      }
    });

    // Create info window for business
    const infoWindow = new google.maps.InfoWindow({
      content: `
        <div class="p-3 min-w-[200px]">
          <h4 class="font-bold text-green-800 mb-2">${businessData.name}</h4>
          <p class="text-sm text-gray-600 mb-3">${businessData.vicinity || place.formatted_address}</p>
          ${businessData.rating ? `
            <div class="flex items-center mb-3">
              <span class="text-yellow-500">â˜…</span>
              <span class="text-sm font-medium ml-1">${businessData.rating}</span>
              ${businessData.user_ratings_total ? `<span class="text-xs text-gray-500 ml-1">(${businessData.user_ratings_total} reviews)</span>` : ''}
            </div>
          ` : ''}
          <div class="mt-3">
            <a href="/contact" class="inline-block bg-green-600 hover:bg-green-700 text-white text-sm font-semibold px-4 py-2 rounded-lg transition-colors duration-200">
              Get a Quote
            </a>
          </div>
        </div>
      `
    });

    marker.addListener('click', () => {
      infoWindow.open(map, marker);
    });
  }

  // Load Google Maps API if not already loaded
  function loadGoogleMaps() {
    const mapElement = document.getElementById('google-map');
    if (!mapElement) return;

    if (typeof google !== 'undefined' && google.maps) {
      initMap();
      return;
    }

    // Check for API key
    const apiKey = import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY;
    if (!apiKey) {
      console.error('PUBLIC_GOOGLE_MAPS_API_KEY is not configured');
      mapElement.innerHTML = '<div class="text-center p-8"><p class="text-red-600">Google Maps API key not configured</p></div>';
      return;
    }
    
    const script = document.createElement('script');
    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap&libraries=places&v=weekly`;
    script.async = true;
    script.defer = true;

    // Make initMap globally available
    window.initMap = initMap;
    
    document.head.appendChild(script);
  }

  // Initialize when component is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadGoogleMaps);
  } else {
    loadGoogleMaps();
  }
</script> 