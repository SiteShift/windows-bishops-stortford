---
import Layout from '../layouts/Layout.astro';
import siteData from '../data/siteData.json';

// Schema markup for contact page
const contactSchema = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  "name": "Contact Windows Bishop's Stortford",
  "description": "Get in touch with Bishop's Stortford's trusted window specialists for a free quote",
  "url": `https://${siteData.site.domain}/contact`,
  "mainEntity": {
    "@type": "LocalBusiness",
    "name": siteData.business.name,
    "telephone": siteData.business.telephone,
    "email": siteData.business.email,
    "address": {
      "@type": "PostalAddress",
      "addressLocality": siteData.business.address.addressLocality,
      "addressRegion": siteData.business.address.addressRegion,
      "addressCountry": siteData.business.address.addressCountry
    }
  }
};

// Breadcrumb schema
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Home",
      "item": `https://${siteData.site.domain}`
    },
    {
      "@type": "ListItem",
      "position": 2,
      "name": "Contact",
      "item": `https://${siteData.site.domain}/contact`
    }
  ]
};

const schema = [contactSchema, breadcrumbSchema];

// Testimonials data
const testimonials = [
  {
    id: 1,
    text: "Outstanding service from start to finish. The team replaced all our Victorian sash windows while maintaining the original character. Couldn't be happier with the results!",
    author: "Rebecca Thompson",
    title: "Homeowner, Bishop's Stortford",
    rating: 5
  },
  {
    id: 2,
    text: "Professional, reliable, and excellent value for money. Our new double glazing has made such a difference to our energy bills. Highly recommend!",
    author: "James Mitchell",
    title: "Property Developer, Hertfordshire",
    rating: 5
  },
  {
    id: 3,
    text: "The team were fantastic - clean, efficient, and the quality of work is superb. Our period cottage windows look amazing and the house is so much warmer now.",
    author: "Sarah Williams",
    title: "Homeowner, Little Hallingbury",
    rating: 5
  },
  {
    id: 4,
    text: "From quote to completion, everything was handled professionally. The installation was completed in one day with minimal disruption. Excellent craftsmanship.",
    author: "David Parker",
    title: "Homeowner, Sawbridgeworth",
    rating: 5
  },
  {
    id: 5,
    text: "We needed emergency window repairs and they responded within hours. Fair pricing, quality work, and great customer service. Will definitely use again.",
    author: "Emma Clarke",
    title: "Homeowner, Stansted Mountfitchet",
    rating: 5
  }
];
---

<Layout 
  title="Contact Us | Get Your Free Window Quote in Bishop's Stortford"
  description="Contact Bishop's Stortford's trusted window specialists for a free quote. Professional window installation, repair and replacement services throughout Hertfordshire."
  schema={schema}
>
  <!-- Contact Page Specific Styles -->
  <style>
    /* Make header solid for this page only */
    header {
      background-color: white !important;
      backdrop-filter: none !important;
      border-bottom: 1px solid #e5e7eb;
    }
  </style>

  <!-- Split Screen Contact Layout -->
  <div class="min-h-screen flex flex-col lg:flex-row">
    <!-- Left Side - Contact Form -->
    <div class="w-full lg:w-1/2 bg-gray-50 flex items-center justify-center p-6 lg:p-12">
      <div class="w-full max-w-md">
        <!-- Header -->
        <div class="mb-6 pt-8 lg:pt-0">
          <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-3 leading-tight">
            Get a Free Quote
          </h1>
          <p class="text-gray-600 text-base leading-relaxed">
            We're window specialists with experts ready to help. We'll get in touch within 2 hours.
          </p>
        </div>

        <!-- Contact Form -->
        <form 
          id="contact-form"
          action={siteData.contact.formEndpoint}
          method="POST"
          class="space-y-4"
        >
          <!-- Name Fields Row -->
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <div>
              <label for="first-name" class="block text-sm font-medium text-gray-700 mb-1">
                First name
              </label>
              <input
                type="text"
                id="first-name"
                name="firstName"
                required
                class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white text-sm"
                placeholder="First name"
              />
              <span class="error-message text-red-500 text-xs hidden mt-1"></span>
            </div>
            <div>
              <label for="last-name" class="block text-sm font-medium text-gray-700 mb-1">
                Last name
              </label>
              <input
                type="text"
                id="last-name"
                name="lastName"
                required
                class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white text-sm"
                placeholder="Last name"
              />
              <span class="error-message text-red-500 text-xs hidden mt-1"></span>
            </div>
          </div>

          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
              Email
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white text-sm"
              placeholder="you@company.com"
            />
            <span class="error-message text-red-500 text-xs hidden mt-1"></span>
          </div>

          <!-- Phone Number -->
          <div>
            <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">
              Phone number
            </label>
            <div class="flex">
              <select class="px-2 py-2.5 border border-gray-300 rounded-l-lg bg-white text-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm">
                <option value="GB">GB</option>
                <option value="US">US</option>
              </select>
              <input
                type="tel"
                id="phone"
                name="phone"
                required
                pattern="[0-9\s\-\(\)\+]{10,15}"
                class="flex-1 px-3 py-2.5 border border-l-0 border-gray-300 rounded-r-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white text-sm"
                placeholder="+1 (555) 000-0000"
              />
            </div>
            <span class="error-message text-red-500 text-xs hidden mt-1"></span>
          </div>

          <!-- Service Needed -->
          <div>
            <label for="service" class="block text-sm font-medium text-gray-700 mb-1">
              Service needed
            </label>
            <select 
              id="service" 
              name="service" 
              required 
              class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white text-sm"
            >
              <option value="">Please select a service</option>
              <option value="double-glazing">Double Glazing Installation</option>
              <option value="window-repair">Window Repair</option>
              <option value="window-replacement">Window Replacement</option>
              <option value="consultation">Free Consultation</option>
            </select>
            <span class="error-message text-red-500 text-xs hidden mt-1"></span>
          </div>

          <!-- Message -->
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-1">
              Message
            </label>
            <textarea
              id="message"
              name="message"
              rows="3"
              class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white resize-none text-sm"
              placeholder="Leave us a message..."
            ></textarea>
            <span class="error-message text-red-500 text-xs hidden mt-1"></span>
          </div>

          <!-- Privacy Policy Checkbox -->
          <div class="flex items-start space-x-3">
            <input
              type="checkbox"
              id="privacy"
              name="privacy"
              required
              class="w-4 h-4 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500 focus:ring-2 mt-0.5"
            />
            <label for="privacy" class="text-sm text-gray-600 leading-relaxed">
              You agree to our friendly <a href="/privacy" class="text-blue-600 underline hover:text-blue-700">privacy policy</a>.
            </label>
          </div>

          <!-- Honeypot field for spam protection -->
          <input type="text" name="website" style="display:none;" tabindex="-1" autocomplete="off" />

          <!-- Submit Button -->
          <button
            type="submit"
            id="submit-btn"
            class="w-full bg-black hover:bg-gray-800 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed text-sm"
          >
            <span class="btn-text">Send message</span>
            <span class="btn-loading hidden flex items-center justify-center">
              <svg class="animate-spin -ml-1 mr-3 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Sending...
            </span>
          </button>

          <!-- Form Messages -->
          <div id="form-messages" class="hidden">
            <div class="success-message bg-green-100 border border-green-400 text-green-700 px-3 py-2 rounded-lg hidden text-sm">
              Thank you! Your message has been sent successfully. We'll be in touch shortly.
            </div>
            <div class="error-message bg-red-100 border border-red-400 text-red-700 px-3 py-2 rounded-lg hidden text-sm">
              Sorry, there was an error sending your message. Please try again or call us directly.
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Right Side - Rounded Image with Testimonials -->
    <div class="w-full lg:w-1/2 bg-gray-50 p-4 lg:p-8">
      <div class="w-full h-64 lg:h-full relative rounded-2xl overflow-hidden" style="background-image: url('/images/windowsbishopsstortford-blogimages/dommoore_2018_mccarter_april_300dpi-3821-scaled_compressed-geotagged.webp'); background-size: cover; background-position: center;">
        <!-- Dark overlay -->
        <div class="absolute inset-0 bg-black bg-opacity-50"></div>
        
        <!-- Testimonial Content - Bottom Left -->
        <div class="absolute bottom-4 lg:bottom-8 left-4 lg:left-8 right-4 lg:right-8 text-white max-w-md">
          <!-- Testimonial Text -->
          <div class="testimonial-container mb-3">
            <p class="text-sm lg:text-base leading-relaxed font-medium text-white" id="testimonial-text">
              The team were fantastic - clean, efficient, and the quality of work is superb. Our period cottage windows look amazing and the house is so much warmer now.
            </p>
          </div>

          <!-- Author Info -->
          <div class="testimonial-author mb-4">
            <p class="font-semibold text-xs lg:text-sm text-white" id="author-name">— Sarah Williams</p>
            <p class="text-gray-200 text-xs lg:text-sm" id="author-title">Homeowner, Little Hallingbury</p>
          </div>

          <!-- Navigation Arrows -->
          <div class="flex space-x-3">
            <button 
              id="prev-testimonial"
              class="w-8 h-8 lg:w-10 lg:h-10 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-full flex items-center justify-center transition-all duration-200 backdrop-blur-sm"
              aria-label="Previous testimonial"
            >
              <svg class="w-4 h-4 lg:w-5 lg:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
              </svg>
            </button>
            <button 
              id="next-testimonial"
              class="w-8 h-8 lg:w-10 lg:h-10 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-full flex items-center justify-center transition-all duration-200 backdrop-blur-sm"
              aria-label="Next testimonial"
            >
              <svg class="w-4 h-4 lg:w-5 lg:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ testimonials }}>
  document.addEventListener('DOMContentLoaded', function() {
    // Form handling
    const form = document.getElementById('contact-form');
    const submitBtn = document.getElementById('submit-btn');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnLoading = submitBtn.querySelector('.btn-loading');
    const formMessages = document.getElementById('form-messages');
    const successMessage = formMessages.querySelector('.success-message');
    const errorMessage = formMessages.querySelector('.error-message');

    // Testimonial carousel
    let currentTestimonial = 2; // Start with Sarah Williams testimonial
    const testimonialText = document.getElementById('testimonial-text');
    const authorName = document.getElementById('author-name');
    const authorTitle = document.getElementById('author-title');
    const prevBtn = document.getElementById('prev-testimonial');
    const nextBtn = document.getElementById('next-testimonial');

    // Update testimonial display
    function updateTestimonial() {
      const testimonial = testimonials[currentTestimonial];
      if (testimonialText) testimonialText.textContent = testimonial.text;
      if (authorName) authorName.textContent = `— ${testimonial.author}`;
      if (authorTitle) authorTitle.textContent = testimonial.title;
    }

    // Next testimonial
    function nextTestimonial() {
      currentTestimonial = (currentTestimonial + 1) % testimonials.length;
      updateTestimonial();
    }

    // Previous testimonial
    function prevTestimonial() {
      currentTestimonial = currentTestimonial === 0 ? testimonials.length - 1 : currentTestimonial - 1;
      updateTestimonial();
    }

    // Event listeners for testimonial navigation
    if (nextBtn) nextBtn.addEventListener('click', nextTestimonial);
    if (prevBtn) prevBtn.addEventListener('click', prevTestimonial);

    // Auto-rotate testimonials every 5 seconds
    setInterval(nextTestimonial, 5000);

    // Form validation
    function validateField(field) {
      const errorSpan = field.parentNode.querySelector('.error-message');
      let isValid = true;
      let message = '';

      if (field.hasAttribute('required') && !field.value.trim()) {
        isValid = false;
        message = 'This field is required.';
      } else if (field.type === 'email' && field.value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(field.value)) {
          isValid = false;
          message = 'Please enter a valid email address.';
        }
      } else if (field.type === 'tel' && field.value) {
        const phoneRegex = /^[0-9\s\-\(\)\+]{10,15}$/;
        if (!phoneRegex.test(field.value)) {
          isValid = false;
          message = 'Please enter a valid phone number.';
        }
      }

      if (isValid) {
        field.classList.remove('border-red-500');
        field.classList.add('border-green-500');
        if (errorSpan) {
          errorSpan.textContent = '';
          errorSpan.classList.add('hidden');
        }
      } else {
        field.classList.remove('border-green-500');
        field.classList.add('border-red-500');
        if (errorSpan) {
          errorSpan.textContent = message;
          errorSpan.classList.remove('hidden');
        }
      }

      return isValid;
    }

    // Add real-time validation
    const fields = form.querySelectorAll('input[required], select[required], input[type="checkbox"][required]');
    fields.forEach(field => {
      field.addEventListener('blur', () => validateField(field));
      field.addEventListener('input', () => {
        if (field.classList.contains('border-red-500')) {
          validateField(field);
        }
      });
    });

    // Form submission with custom event tracking
    form.addEventListener('submit', async function(e) {
      e.preventDefault();

      // Hide previous messages
      formMessages.classList.add('hidden');
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');

      // Validate all fields
      let isFormValid = true;
      fields.forEach(field => {
        if (!validateField(field)) {
          isFormValid = false;
        }
      });

      if (!isFormValid) {
        return;
      }

      // Check honeypot
      if (form.website.value) {
        return; // Likely spam
      }

      // Show loading state
      submitBtn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');

      try {
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        
        // Combine first and last name
        data.name = `${data.firstName} ${data.lastName}`;
        delete data.firstName;
        delete data.lastName;
        
        // Add timestamp and source
        data.timestamp = new Date().toISOString();
        data.source = 'website';
        data.page = window.location.pathname;

        // Track custom event with Vercel Analytics (if available)
        if (typeof window.va !== 'undefined') {
          window.va('track', 'Contact Form Submission', {
            name: data.name,
            email: data.email,
            phone: data.phone,
            service: data.service,
            message: data.message ? 'Yes' : 'No',
            source: data.source,
            page: data.page,
            timestamp: data.timestamp
          });
        }

        const response = await fetch(form.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        if (response.ok) {
          // Show success message
          formMessages.classList.remove('hidden');
          successMessage.classList.remove('hidden');
          
          // Reset form
          form.reset();
          
          // Remove validation classes
          fields.forEach(field => {
            field.classList.remove('border-green-500', 'border-red-500');
          });

          // Track successful submission
          if (typeof window.va !== 'undefined') {
            window.va('track', 'Contact Form Success', {
              name: data.name,
              email: data.email,
              service: data.service
            });
          }
        } else {
          throw new Error('Network response was not ok');
        }
      } catch (error) {
        console.error('Form submission error:', error);
        
        // Show error message
        formMessages.classList.remove('hidden');
        errorMessage.classList.remove('hidden');

        // Track form error
        if (typeof window.va !== 'undefined') {
          window.va('track', 'Contact Form Error', {
            error: error.message
          });
        }
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        btnText.classList.remove('hidden');
        btnLoading.classList.add('hidden');
      }
    });
  });
</script> 